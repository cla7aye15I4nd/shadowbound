[
  {
    "pattern": {
      "index": 0,
      "module": "alias.c",
      "name": "ao_ref_from_mem",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-common.c",
      "name": "add_tlist",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_decimal_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_fixed_point_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_type_minmax",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_with_hex_fp_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_with_int_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-format.c",
      "name": "maybe_read_dollar_number",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-parser.c",
      "name": "c_parser_binary_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-parser.c",
      "name": "c_parser_braced_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-parser.c",
      "name": "c_parser_cast_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-parser.c",
      "name": "c_parser_conditional_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "c-parser.c",
      "name": "c_parser_expression_conv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "calls.c",
      "name": "store_one_arg",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cfgexpand.c",
      "name": "expand_stack_vars",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cfgexpand.c",
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cfgloopmanip.c",
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cgraphunit.c",
      "name": "thunk_adjust",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "combine.c",
      "name": "merge_outer_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "combine.c",
      "name": "recog_for_combine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "combine.c",
      "name": "simplify_shift_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cplus-dem.c",
      "name": "arm_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cplus-dem.c",
      "name": "consume_count",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cpp_charset.c",
      "name": "init_iconv_desc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cpp_expr.c",
      "name": "num_binary_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cpp_expr.c",
      "name": "num_lshift",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "cpp_expr.c",
      "name": "num_rshift",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "df-problems.c",
      "name": "df_lr_alloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "df-problems.c",
      "name": "df_lr_local_compute",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "df-scan.c",
      "name": "df_bb_refs_collect",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "df-scan.c",
      "name": "df_free_collection_rec",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "df-scan.c",
      "name": "df_insn_refs_verify",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "df-scan.c",
      "name": "df_refs_add_to_chains",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "diagnostic.c",
      "name": "build_message_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dominance.c",
      "name": "calc_dfs_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dominance.c",
      "name": "calc_idoms",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dominance.c",
      "name": "free_dom_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dominance.c",
      "name": "init_dom_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dwarf2out.c",
      "name": "add_loc_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dwarf2out.c",
      "name": "build_cfa_loc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dwarf2out.c",
      "name": "collect_checksum_attributes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "dwarf2out.c",
      "name": "generate_skeleton_bottom_up",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "expr.c",
      "name": "store_by_pieces_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "fixed-value.c",
      "name": "check_real_for_fixed_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "fold-const.c",
      "name": "fold_overflow_warning",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "function.c",
      "name": "assign_parm_find_data_types",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "function.c",
      "name": "assign_parms_augmented_arg_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "fwprop.c",
      "name": "propagate_rtx_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "gcse.c",
      "name": "compute_hash_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "gcse.c",
      "name": "is_too_expensive",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "ggc-common.c",
      "name": "write_pch_globals",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "gimple-low.c",
      "name": "lower_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "haifa-sched.c",
      "name": "early_queue_to_ready",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "extract_vec_perm_cst",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "ix86_compute_frame_layout",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "ix86_expand_args_builtin",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "ix86_expand_special_args_builtin",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "ix86_expand_sse_comi",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "ix86_expand_sse_pcmpestr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "ix86_expand_sse_pcmpistr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "i386.c",
      "name": "ix86_expand_vec_perm_builtin_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "ifcvt.c",
      "name": "cond_exec_process_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "ifcvt.c",
      "name": "cond_move_process_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "ifcvt.c",
      "name": "noce_emit_store_flag",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "ifcvt.c",
      "name": "noce_get_alt_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "loop-invariant.c",
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "loop-iv.c",
      "name": "iv_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "loop-iv.c",
      "name": "iv_neg",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "loop-iv.c",
      "name": "iv_shift",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "loop-iv.c",
      "name": "shorten_into_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "loop-unroll.c",
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "lto-streamer.c",
      "name": "lto_record_common_node",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "mini-gmp.c",
      "name": "mpn_div_qr_invert",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "omp-low.c",
      "name": "lower_omp_critical",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "omp-low.c",
      "name": "task_copyfn_remap_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "opts.c",
      "name": "add_comma_separated_to_vector",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "passes.c",
      "name": "do_per_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "real.c",
      "name": "decimal_integer_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "real.c",
      "name": "rtd_divmod",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "regex.c",
      "name": "byte_common_op_match_null_string_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "regex.c",
      "name": "byte_group_match_null_string_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "reload.c",
      "name": "decompose",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "sel-sched-ir.c",
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "sel-sched.c",
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "sel-sched.c",
      "name": "find_best_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "sel-sched.c",
      "name": "undo_transformations",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-complex.c",
      "name": "expand_complex_libcall",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-complex.c",
      "name": "extract_component",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-complex.c",
      "name": "update_complex_assignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-eh.c",
      "name": "emit_resx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-inline.c",
      "name": "copy_body",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-inline.c",
      "name": "delete_unreachable_blocks_update_callgraph",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-inline.c",
      "name": "remap_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-inline.c",
      "name": "setup_one_parameter",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-mudflap.c",
      "name": "mf_xform_derefs_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-predcom.c",
      "name": "find_use_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-sra.c",
      "name": "scan_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-address.c",
      "name": "add_to_parts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-dom.c",
      "name": "VEC_expr_hash_elt_t_heap_safe_push",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-dom.c",
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-forwprop.c",
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "tree_ssa_iv_optimize_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-math-opts.c",
      "name": "execute_cse_reciprocals_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-math-opts.c",
      "name": "maybe_record_sincos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-phiopt.c",
      "name": "gsi_last_nondebug_bb",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa-propagate.c",
      "name": "process_ssa_edge_worklist",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-ssa.c",
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-stdarg.c",
      "name": "check_va_list_escapes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-stdarg.c",
      "name": "va_list_counter_struct_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-stdarg.c",
      "name": "va_list_ptr_read",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-stdarg.c",
      "name": "va_list_ptr_write",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-tailcall.c",
      "name": "create_tailcall_accumulator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vect-generic.c",
      "name": "expand_vector_parallel",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vect-stmts.c",
      "name": "vect_create_vectorized_demotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vect-stmts.c",
      "name": "vect_create_vectorized_promotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vect-stmts.c",
      "name": "vect_get_loop_based_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vect-stmts.c",
      "name": "vect_mark_relevant",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vrp.c",
      "name": "extract_range_from_assignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vrp.c",
      "name": "range_is_null",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "module": "tree-vrp.c",
      "name": "vrp_meet",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_bid_to_dpd128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_bid_to_dpd32",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_bid_to_dpd64",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_dpd_to_bid128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_dpd_to_bid32",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_dpd_to_bid64",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_fatal_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "add_params",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "aff_combination_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "aff_combination_constant_multiple_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "aff_combination_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ao_ref_init_from_ptr_and_size",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ao_ref_init_from_vn_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "av_set_add",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "av_set_intersect",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "av_set_leave_one_nonspec",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "av_set_substract_cond_branches",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "av_set_union_and_live",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "build_fn_decl",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "build_personality_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "build_ref_for_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_std",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_with_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cgraph_add_edge_duplication_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cgraph_add_edge_removal_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cgraph_add_function_insertion_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cgraph_add_node_duplication_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cgraph_add_node_removal_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "clean_symbol_name",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "compute_use_by_pseudos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cplus_demangle_mangled_name",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cpp_interpret_integer",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cpp_num_sign_extend",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cpp_quote_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "create_alloc_pool",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "create_mem_ref",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cse_main",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberAdd",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberCompare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberDivide",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberMultiply",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberPlus",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberRescale",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberSubtract",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberToEngString",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberToIntegralValue",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decNumberToString",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decimal32FromNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decimal32ToNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decimal64FromNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decimal64ToNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "default_function_array_conversion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_scan_alloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "diagnostic_set_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "diagnostic_set_info_translated",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "diddle_return_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "do_per_function_toporder",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "dw2_asm_output_delta_uleb128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "error_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expand_expr_real_2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expand_location",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expand_phi_nodes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expandargv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fatal_error",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "find_values_to_profile",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fini_walk_dominator_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "finish_out_of_ssa",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fix_sched_param",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fixed_arithmetic",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fixed_convert",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fixed_convert_from_int",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fixed_convert_from_real",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fixed_from_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "flist_clear",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "flist_tail_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "flow_call_edges_add",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fold_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "for_each_eh_label",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "free_affine_expand_cache",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "free_alloc_pool_if_empty",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "function_arg",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "function_arg_advance",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gcov_read_summary",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_paritydi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_paritysi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_sse4_2_pcmpestr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_sse4_2_pcmpistr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "get_cfg_hooks",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "get_file_function_name",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_for_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_insert_seq_after_without_update",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_insert_seq_before_without_update",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_move_to_bb_end",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_split_seq_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_split_seq_before",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_start_phis",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "init_cumulative_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "init_dep",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "init_dep_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "init_walk_dominator_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "internal_error",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ipa_pop_func_from_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ipa_push_func_to_list_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ira_better_spill_reload_regno_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ira_implicitly_set_insn_hard_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_copysign",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_fp_movcc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_fp_vcond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_int_addcc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_int_vcond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_reduc_v4sf",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_sse4_unpack",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_sse_unpack",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_vec_interleave_v2df_operator_ok",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "make_region_from_loop_preheader",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "max_issue",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "md5_finish_ctx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "md5_init_ctx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "merge_ranges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "merge_with_other_exprs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_clear",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_export",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_fdiv_q",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_gcd",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_gcd_ui",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_gcdext",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_get_str",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_init_set",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_invert",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_setbit",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_sub",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_swap",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "output_operand_lossage",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "parser_build_binary_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "parser_xref_tag",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "pass_by_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "pp_base_clear_output_area",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "pp_base_formatted_text",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "pragma_lex",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "print_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "print_pattern",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "process_init_element",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "propagate_tree_value_into_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "push_gimplify_context",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ready_element",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ready_lastpos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ready_sort",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_2expN",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_arithmetic2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_ceil",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_convert_from_fixed",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_copysign",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_floor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_from_string2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_from_target",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_inf",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_ldexp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_maxval",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_nan",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_powi",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_round",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_sqrt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_to_hexadecimal",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_to_integer",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_to_target",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_trunc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_value_from_int_cst",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_value_truncate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "reference_callee_copied",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "remove_phi_node",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "remove_similar_memory_refs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "restore_other_notes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "rewrite_out_of_ssa",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sched_analyze",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sched_create_recovery_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sched_scan",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "schedule_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sd_add_or_update_dep",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sd_delete_dep",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sd_resolve_dep",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sel_prepare_string_for_dot_label",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "set_cfg_hooks",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "set_option",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "set_user_assembler_libfunc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sha1_finish_ctx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "shorten_compare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "splay_tree_new",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "splay_tree_new_with_allocator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sreal_add",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sreal_compare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sreal_sub",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sreal_to_int",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ssa_propagate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "tsi_delink",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "tsi_link_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "unshare_aff_combination",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "use_group_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "use_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vn_reference_fold_indirect",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "walk_aliased_vdefs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "walk_dominator_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "walk_gimple_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "walk_non_aliased_vuses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "bt-load.c",
      "name": "btr_def_live_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "builtins.c",
      "name": "target_char_cast",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-common.c",
      "name": "catenate_strings",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_decimal_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_fixed_point_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_type_minmax",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-format.c",
      "name": "decode_format_attr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-parser.c",
      "name": "c_parser_error",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-parser.c",
      "name": "c_parser_initval",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "c-typeck.c",
      "name": "warning_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "calls.c",
      "name": "check_sibcall_argument_overlap",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cfgexpand.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cfgloopmanip.c",
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cfgloopmanip.c",
      "name": "fix_bb_placements",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "combine.c",
      "name": "if_then_else_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "combine.c",
      "name": "merge_outer_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "combine.c",
      "name": "simplify_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cp-demangle.c",
      "name": "d_append_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cp-demangle.c",
      "name": "is_ctor_or_dtor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cplus-dem.c",
      "name": "arm_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cplus-dem.c",
      "name": "gnu_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cplus-dem.c",
      "name": "iterate_demangle_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cplus-dem.c",
      "name": "string_appends",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cplus-dem.c",
      "name": "string_prepends",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cpp_directives.c",
      "name": "parse_assertion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cpp_directives.c",
      "name": "parse_include",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cpp_macro.c",
      "name": "paste_tokens",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "cse.c",
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "dbxout.c",
      "name": "dbxout_common_check",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "dfp.c",
      "name": "decimal_from_decnumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "dfp.c",
      "name": "decimal_to_decnumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "dse.c",
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "dwarf2out.c",
      "name": "def_cfa_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "dwarf2out.c",
      "name": "lookup_cfa_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "except.c",
      "name": "get_eh_region_and_lp_from_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "final.c",
      "name": "get_mem_expr_from_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "final.c",
      "name": "notice_source_line",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "final.c",
      "name": "output_asm_operand_names",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "gcse.c",
      "name": "dump_hash_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "ggc-common.c",
      "name": "write_pch_globals",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "gimple-iterator.c",
      "name": "gimple_find_edge_insert_loc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "i386.c",
      "name": "ix86_expand_sse_fabs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "i386.c",
      "name": "ix86_handle_option",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "i386.c",
      "name": "ix86_split_to_parts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "ifcvt.c",
      "name": "check_cond_move_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "ifcvt.c",
      "name": "noce_get_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "ipa-inline.c",
      "name": "cgraph_default_inline_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "ipa-struct-reorg.c",
      "name": "is_candidate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "ira-conflicts.c",
      "name": "print_hard_reg_set",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "lambda-code.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "loop-invariant.c",
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "loop-invariant.c",
      "name": "get_cover_class_and_nregs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "loop-invariant.c",
      "name": "get_inv_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "loop-iv.c",
      "name": "latch_dominating_def",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "loop-unroll.c",
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "lto-streamer-out.c",
      "name": "write_symbol_vec",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "lto-streamer.c",
      "name": "lto_record_common_node",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "make-relative-prefix.c",
      "name": "split_directories",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "matrix-reorg.c",
      "name": "collect_data_for_malloc_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "matrix-reorg.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "mcf.c",
      "name": "dump_fixup_graph",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "omp-low.c",
      "name": "expand_omp_for_generic",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "omp-low.c",
      "name": "extract_omp_for_data",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "omp-low.c",
      "name": "lower_rec_input_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "omp-low.c",
      "name": "lower_reduction_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "real.c",
      "name": "decode_ieee_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "real.c",
      "name": "rtd_divmod",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "reg-stack.c",
      "name": "subst_stack_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "regex.c",
      "name": "byte_compile_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "reload1.c",
      "name": "choose_reload_regs_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "sched-deps.c",
      "name": "sched_get_condition_with_rev",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "sel-sched-ir.c",
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "sel-sched.c",
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "sel-sched.c",
      "name": "extract_new_fences_from",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "sel-sched.c",
      "name": "remove_insns_that_need_bookkeeping",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-cfg.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-eh.c",
      "name": "honor_protect_cleanup_actions",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-eh.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-loop-distribution.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-nested.c",
      "name": "walk_gimple_omp_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-predcom.c",
      "name": "find_associative_operation_root",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-predcom.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-scalar-evolution.c",
      "name": "dump_chrecs_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-sra.c",
      "name": "disqualify_base_of_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-sra.c",
      "name": "dump_dereferences_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-sra.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-sra.c",
      "name": "scan_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-address.c",
      "name": "create_mem_ref_raw",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-ccp.c",
      "name": "dump_lattice_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-dce.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-dom.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-dse.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-forwprop.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-ifcombine.c",
      "name": "recognize_bits_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-ifcombine.c",
      "name": "recognize_single_bit_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-loop-im.c",
      "name": "simple_mem_ref_in_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-loop-niter.c",
      "name": "dump_affine_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-loop-niter.c",
      "name": "number_of_iterations_lt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-loop-niter.c",
      "name": "number_of_iterations_ne",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-loop-niter.c",
      "name": "split_to_var_and_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-loop-prefetch.c",
      "name": "gather_memory_references_ref",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-math-opts.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-math-opts.c",
      "name": "maybe_record_sincos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-operands.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-phiprop.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-reassoc.c",
      "name": "negate_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-reassoc.c",
      "name": "optimize_ops_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-structalias.c",
      "name": "VEC_ce_s_heap_safe_push",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-structalias.c",
      "name": "get_constraint_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-structalias.c",
      "name": "handle_rhs_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa-structalias.c",
      "name": "make_constraint_from_heapvar",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-ssa.c",
      "name": "warn_uninit",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-tailcall.c",
      "name": "adjust_return_value_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vect-generic.c",
      "name": "expand_vector_parallel",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vect-loop-manip.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vect-loop.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vect-loop.c",
      "name": "reduction_code_for_scalar_code",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vect-loop.c",
      "name": "report_vect_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vect-slp.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vect-stmts.c",
      "name": "vect_create_vectorized_promotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vrp.c",
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vrp.c",
      "name": "update_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vrp.c",
      "name": "vrp_expr_computes_nonnegative",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree-vrp.c",
      "name": "vrp_meet",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "tree.c",
      "name": "maybe_canonicalize_argtypes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "var-tracking.c",
      "name": "VEC_micro_operation_heap_safe_push",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "var-tracking.c",
      "name": "insn_stack_adjust_offset_pre_post",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "module": "varasm.c",
      "name": "decode_addr_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "__host_to_ieee_32",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "__host_to_ieee_64",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "__ieee_to_host_32",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "__ieee_to_host_64",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_bid_to_dpd128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_bid_to_dpd32",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_bid_to_dpd64",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_cpp_preprocess_dir_only",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_cpp_push_token_context",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_cpp_test_assertion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_dpd_to_bid128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_dpd_to_bid32",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_dpd_to_bid64",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_fatal_insn_not_found",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "aff_combination_add",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "aff_combination_constant_multiple_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "aff_combination_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "allocate_dynamic_stack_space",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "append_to_statement_list_force",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "asm_fprintf",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "av_set_union_and_clear",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "av_set_union_and_live",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "build_enumerator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "build_fixed",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "build_string_literal",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "c_finish_bc_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "c_pp_lookup_pragma",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "can_store_by_pieces",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "canonicalize_loop_ivs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "categorize_ctor_elements",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cgraph_add_edge_duplication_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cgraph_add_edge_removal_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cgraph_add_function_insertion_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cgraph_add_node_duplication_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cgraph_add_node_removal_hook",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cgraph_inline_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "chrec_is_positive",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "copy_reference_ops_from_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "count_insns_seq",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cpp_define_formatted",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cpp_forall_identifiers",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cpp_num_sign_extend",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cpp_prepare_state",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decDigitsFromDPD",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decDigitsToDPD",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberAdd",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberCompare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberDivide",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberMultiply",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberRescale",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberSubtract",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberToIntegralValue",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decimal32FromNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decimal32ToNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decimal64FromNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decimal64ToNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decimal_real_to_decimal",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "df_simple_dataflow",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "diagnostic_report_diagnostic",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_addr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_begin",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_int",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_sbitmap_vector",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dw2_asm_output_data_sleb128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dw2_asm_output_data_uleb128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dwarf2out_begin_prologue",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "emit_library_call_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "emit_stack_save",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "error_for_asm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "exact_real_inverse",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "exact_real_truncate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "expandargv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "extend_rgns",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "extract_cond_bb_edges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "extract_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "extract_true_false_edges_from_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fdopen_unlocked",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "find_loop_nest",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "find_loop_niter",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "find_loop_niter_by_eval",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "finish_builtin_struct",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fixed_from_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "flow_loops_dump",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fnotice",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "for_each_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "for_each_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gcc_loopnest_to_lambda_loopnest",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_paritydi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_paritysi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1936",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1937",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1938",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1939",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1940",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1941",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1942",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_1943",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2143",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2154",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2162",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2202",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2203",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2399",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2400",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2410",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2423",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2424",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2425",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2426",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2427",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2428",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2429",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2430",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2431",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2432",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2433",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2434",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2435",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2436",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2437",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2438",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2439",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2440",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2441",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2442",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2443",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2444",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2445",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2446",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2447",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2448",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2449",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2450",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2451",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2452",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2453",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2454",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2455",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2456",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2457",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2458",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2459",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2460",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2461",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2462",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2463",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2464",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2465",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2466",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2467",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2468",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2469",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2470",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2471",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2472",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2473",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2474",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2475",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2476",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2477",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2478",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2479",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2480",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2481",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2482",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2483",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2484",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_peephole2_2485",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1848",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1849",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1850",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1851",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1852",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1853",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1854",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1861",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1862",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1865",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1868",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1869",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1871",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1872",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1873",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1875",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1876",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1878",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1879",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1880",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1881",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1882",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1883",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1884",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1885",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1886",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1888",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1890",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1891",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1892",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1894",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1895",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1896",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1898",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1899",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1901",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1902",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1903",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1904",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1905",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1906",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1908",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1912",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1914",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1917",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1918",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1919",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1920",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1932",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1933",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1944",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1945",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1946",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1947",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1948",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1949",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1950",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1951",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1952",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1953",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1954",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1955",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1956",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1957",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1958",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1959",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1960",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1961",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1965",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1966",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1967",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1968",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1969",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1970",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1971",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1972",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1973",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1980",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1981",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1982",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1983",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1984",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1985",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1986",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1987",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1988",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1989",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1990",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1991",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1992",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1993",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1994",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1995",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1996",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1997",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1998",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_1999",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2000",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2001",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2002",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2003",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2004",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2005",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2006",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2007",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2008",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2009",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2010",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2011",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2012",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2013",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2014",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2015",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2016",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2017",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2018",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2019",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2020",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2021",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2022",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2023",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2024",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2025",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2026",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2027",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2035",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2036",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2037",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2038",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2039",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2044",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2076",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2077",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2080",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2081",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2085",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2086",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2087",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2091",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2092",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2093",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2094",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2095",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2102",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2103",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2104",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2105",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2111",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2120",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2121",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2122",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2123",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2124",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2129",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2130",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2131",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2132",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2133",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2137",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2138",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2139",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2141",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2144",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2148",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2149",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2155",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2163",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2168",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2171",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2174",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2177",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2182",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2183",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2184",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2185",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2186",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2187",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2188",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2189",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2190",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2191",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2192",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2193",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2194",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2195",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2196",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2197",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2198",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2199",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2217",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2220",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2225",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2227",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2232",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2234",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2235",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2236",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2237",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2238",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2239",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2249",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2250",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2251",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2252",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2253",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2254",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2316",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2317",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2318",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2319",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2320",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2321",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2322",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2323",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2324",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2332",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2336",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2337",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2338",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2339",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2340",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2341",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2342",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2343",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2344",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2350",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2354",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2355",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2356",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2357",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2358",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2359",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2360",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2361",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2362",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2368",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2372",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2376",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2377",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2405",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2409",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2417",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2418",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2419",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2420",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2421",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2422",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2501",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2502",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2503",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2504",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2505",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2524",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2525",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2569",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2570",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2597",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2598",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2599",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2714",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2721",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2728",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2739",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2740",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2759",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2760",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2762",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2764",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2785",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2793",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2794",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2867",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2868",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2870",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2891",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2892",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2893",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2894",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2926",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2927",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2928",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2929",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2930",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_split_2931",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_sse4_2_pcmpestr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_sse4_2_pcmpistr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_address_description",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_dest_and_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_formal_tmp_var",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_inner_reference_aff",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_loop_body_in_custom_order",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_max_float",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_named_section",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_narrower",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_option_state",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_pool_constant_mark",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_references_in_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ggc_print_common_statistics",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gimple_build_cond_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gimple_cond_get_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gimple_regimplify_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "groktypename",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gsi_move_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gsi_move_before",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "haifa_init_h_i_d",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ht_purge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "htab_traverse",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "htab_traverse_noresize",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ipa_utils_print_order",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ira_better_spill_reload_regno_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_decompose_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_expand_move",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_expand_vector_move",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_expand_vector_move_misalign",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "lambda_collect_parameters",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "make_forwarder_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "make_relative_prefix",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "make_rename_temp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "maybe_warn_string_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "md5_finish_ctx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "merge_ranges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "merge_with_other_exprs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_export",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_fdiv_q",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_gcdext",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_pow_ui",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_sub",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_swap",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "pointer_map_traverse",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "pp_base_format_verbatim",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "pp_construct",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "pp_verbatim",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "print_node",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "print_plugins_help",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "promote_decl_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "real_copysign",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "real_from_string2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "real_from_string3",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "real_from_target",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "real_value_from_int_cst",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "record_builtin_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "remove_node_from_expr_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "sched_init_luids",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "sel_init_bbs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "set_mem_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "shorten_compare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "sign_expand_binop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "single_imm_use_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "splay_tree_foreach",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "splay_tree_new",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "splay_tree_new_with_allocator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "split_constant_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "split_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "sreal_add",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "sreal_div",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "sreal_sub",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ssa_propagate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "standard_iv_increment_position",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "start_enum",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "statistics_counter_event",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "statistics_histogram_event",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "stores_from_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "string_constant",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "struct.re_registers",
      "type": "struct"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "subrange_type_for_debug_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "substitute_and_fold",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "tablejump_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "tree_num_loop_insns",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vec_stack_p_reserve_exact_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_analyze_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_do_peeling_for_loop_bound",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_get_smallest_scalar_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_schedule_slp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_transform_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vn_nary_op_lookup",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vn_nary_op_lookup_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vn_reference_fold_indirect",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "walk_tree_without_duplicates_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "walk_use_def_chains",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "xre_search_2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 10,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 12,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 12,
      "module": "tree-vect-stmts.c",
      "name": "vect_create_vectorized_promotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 13,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "bt-load.c",
      "name": "insn_sets_btr_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "c-parser.c",
      "name": "c_parser_omp_all_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "c-parser.c",
      "name": "c_parser_require_keyword",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "c-parser.c",
      "name": "c_parser_skip_until_found",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "calls.c",
      "name": "save_fixed_argument_area",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "combine.c",
      "name": "find_single_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "combine.c",
      "name": "if_then_else_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "combine.c",
      "name": "recog_for_combine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "combine.c",
      "name": "simplify_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cp-demangle.c",
      "name": "is_ctor_or_dtor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cplus-dem.c",
      "name": "do_arg",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cplus-dem.c",
      "name": "gnu_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cplus-dem.c",
      "name": "iterate_demangle_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cpp_directives.c",
      "name": "parse_include",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cpp_directives.c",
      "name": "run_directive",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cpp_lex.c",
      "name": "lex_number",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cpp_lex.c",
      "name": "warn_about_normalization",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cse.c",
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "cse.c",
      "name": "find_reg_offset_for_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "dbxout.c",
      "name": "dbxout_symbol_location",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "decNumber.c",
      "name": "decFinalize",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "dfp.c",
      "name": "decimal_from_decnumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "dse.c",
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "dwarf2out.c",
      "name": "add_AT_lbl_id",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "dwarf2out.c",
      "name": "compute_barrier_args_size_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "dwarf2out.c",
      "name": "expansion_failed",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "dwarf2out.c",
      "name": "lookup_cfa_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "except.c",
      "name": "get_eh_region_and_lp_from_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "expmed.c",
      "name": "choose_mult_variant",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "expmed.c",
      "name": "synth_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "fold-const.c",
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "fold-const.c",
      "name": "split_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "function.c",
      "name": "assign_parm_find_data_types",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "gcse.c",
      "name": "dump_hash_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "i386.c",
      "name": "ix86_expand_vector_init_concat",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "i386.c",
      "name": "ix86_expand_vector_init_interleave",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "ifcvt.c",
      "name": "check_cond_move_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "ifcvt.c",
      "name": "noce_get_alt_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "ipa-struct-reorg.c",
      "name": "gen_size",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "ipa-struct-reorg.c",
      "name": "is_candidate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "ira-costs.c",
      "name": "record_reg_classes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "loop-invariant.c",
      "name": "get_inv_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "loop-iv.c",
      "name": "iv_get_reaching_def",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "mcf.c",
      "name": "dump_fixup_graph",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "mini-gmp.c",
      "name": "mpn_get_str_other",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "omp-low.c",
      "name": "extract_omp_for_data",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "omp-low.c",
      "name": "lower_lastprivate_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "omp-low.c",
      "name": "lower_rec_input_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "pretty-print.c",
      "name": "decode_utf8_char",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "profile.c",
      "name": "output_location",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "real.c",
      "name": "encode_ieee_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "reload.c",
      "name": "immune_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "resource.c",
      "name": "find_dead_or_set_registers",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "rtl-error.c",
      "name": "diagnostic_for_asm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "sel-sched.c",
      "name": "choose_best_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "sel-sched.c",
      "name": "compute_av_set_on_boundaries",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "sel-sched.c",
      "name": "schedule_on_fences",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "sel-sched.c",
      "name": "try_bitmap_cache",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "sel-sched.c",
      "name": "try_transformation_cache",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-data-ref.c",
      "name": "analyze_siv_subscript_cst_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-data-ref.c",
      "name": "analyze_subscript_affine_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-eh.c",
      "name": "honor_protect_cleanup_actions",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-eh.c",
      "name": "replace_goto_queue_cond_clause",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-loop-distribution.c",
      "name": "rdg_build_components",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-loop-distribution.c",
      "name": "rdg_build_partitions",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-nested.c",
      "name": "walk_gimple_omp_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-sra.c",
      "name": "scan_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-forwprop.c",
      "name": "get_prop_source_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-ifcombine.c",
      "name": "recognize_bits_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-ifcombine.c",
      "name": "recognize_single_bit_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "constant_multiple_of",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-loop-niter.c",
      "name": "determine_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-loop-niter.c",
      "name": "number_of_iterations_lt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-loop-niter.c",
      "name": "split_to_var_and_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-pre.c",
      "name": "print_bitmap_set",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-ssa-structalias.c",
      "name": "get_constraint_for_ptr_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-tailcall.c",
      "name": "independent_of_stmt_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-loop.c",
      "name": "vect_is_simple_iv_evolution",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-patterns.c",
      "name": "widened_name_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-slp.c",
      "name": "vect_build_slp_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vect_stmt_relevant_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_assignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_conversion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_load",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_store",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_type_demotion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vect-stmts.c",
      "name": "vectorizable_type_promotion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vrp.c",
      "name": "register_edge_assert_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree-vrp.c",
      "name": "set_value_range_to_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "tree.c",
      "name": "maybe_canonicalize_argtypes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "var-tracking.c",
      "name": "insn_stack_adjust_offset_pre_post",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "var-tracking.c",
      "name": "use_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "module": "varasm.c",
      "name": "narrowing_initializer_constant_valid_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "__host_to_ieee_128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "__ieee_to_host_128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "_fatal_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "aff_combination_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "asm_operand_ok",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "bitmap_print",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "build_function_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_expr_sizeof_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_fully_fold",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_lex_with_flags",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_pp_lookup_pragma",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_split_parallel_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "can_unroll_loop_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "categorize_ctor_elements",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "convert_affine_scev",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "count_uses_and_derefs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "cpp_interpret_charconst",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "create_basic_block_structure",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "create_mem_ref",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberAdd",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberCompare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberDivide",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberFromString",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberMultiply",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberPlus",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberRescale",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberSubtract",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberToIntegralExact",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberToIntegralValue",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decimal32FromNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decimal64FromNumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "declspecs_add_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "df_compute_accessed_bytes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "df_simple_dataflow",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dfs_enumerate_from",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dump_sbitmap_vector",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dw2_asm_output_addr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dw2_asm_output_addr_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dw2_asm_output_delta_uleb128",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dw2_asm_output_nstring",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "eliminate_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "emit_stack_restore",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "emit_stack_save",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "estimated_loop_iterations",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "extract_cond_bb_edges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "extract_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "extract_true_false_edges_from_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "fit_double_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "fold_builtin_snprintf_chk",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gcc_loopnest_to_lambda_loopnest",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gen_paritydi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_coverage_counts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_dest_and_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_ebb_head_tail",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_initialized_tmp_var",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_inner_reference_aff",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gimple_build_cond_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gimple_cond_get_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "groktypename",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gt_pch_note_object",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gt_pch_note_reorder",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "haifa_init_h_i_d",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "has_dependence_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "hash_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ht_purge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ipa_modify_formal_parameters",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "iv_analyze",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "iv_analyze_result",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_binary_operator_ok",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_expand_binary_operator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_expand_fp_absneg_operator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_expand_unary_operator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_fixup_binary_operands_no_copy",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_lea_for_add_ok",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_unary_operator_ok",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lambda_loopnest_transform",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "loop_version",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lto_create_simple_input_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lto_streamer_cache_insert",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lto_streamer_cache_lookup",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "make_forwarder_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "make_relative_prefix",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mark_target_live_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "merge_ranges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpz_fdiv_q",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpz_gcdext",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpz_out_str",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpz_powm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpz_sub",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "neg_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "pedwarn_c90",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "pedwarn_c99",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "pedwarn_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "peep2_find_free_register",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "peephole2_insns",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "pointer_map_traverse",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "promote_function_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ptr_difference_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "real_ceil",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "real_floor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "real_powi",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "real_round",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "real_sqrt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "real_to_integer2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sched_init_luids",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sched_speculate_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sd_next_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sha1_process_bytes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "shorten_compare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sign_expand_binop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "single_imm_use_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "splay_tree_new",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "splay_tree_new_with_allocator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "split_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "split_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sreal_div",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sreal_sub",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "standard_iv_increment_position",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "store_by_pieces",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "struct.re_registers",
      "type": "struct"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "subrange_type_for_debug_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "tablejump_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "tree_to_aff_combination_expand",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_get_smallest_scalar_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_get_vec_def_for_operand",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_loop_versioning",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_model_simple_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_setup_realignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_transform_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_induction",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_live_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_reduction",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "walk_aliased_vdefs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "walk_non_aliased_vuses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "walk_stmt_load_store_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "c-cppbuiltin.c",
      "name": "builtin_define_with_hex_fp_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "c-decl.c",
      "name": "lookup_tag",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "c-format.c",
      "name": "maybe_read_dollar_number",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "c-parser.c",
      "name": "c_parser_expr_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "c-parser.c",
      "name": "c_parser_omp_for_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "caller-save.c",
      "name": "insert_restore",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "calls.c",
      "name": "save_fixed_argument_area",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "combine.c",
      "name": "can_combine_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "combine.c",
      "name": "try_combine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "cplus-dem.c",
      "name": "demangle_template",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "cpp_directives.c",
      "name": "parse_include",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "cpp_lex.c",
      "name": "bufring_append",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "cpp_lex.c",
      "name": "lex_identifier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "cse.c",
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "decNumber.c",
      "name": "decExpOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "decNumber.c",
      "name": "decLnOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "dse.c",
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "dwarf2out.c",
      "name": "add_ranges_by_labels",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "expmed.c",
      "name": "choose_mult_variant",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "expmed.c",
      "name": "choose_multiplier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "expr.c",
      "name": "expand_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "fold-const.c",
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "fold-const.c",
      "name": "split_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "gcse.c",
      "name": "compute_local_properties",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "gimple-pretty-print.c",
      "name": "dump_gimple_fmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "i386.c",
      "name": "ix86_expand_carry_flag_compare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "ifcvt.c",
      "name": "cond_move_convert_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "ipa-struct-reorg.c",
      "name": "gen_cast_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "ira-costs.c",
      "name": "record_reg_classes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "sched-deps.c",
      "name": "sd_find_dep_between_no_cache",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "sel-sched.c",
      "name": "code_motion_path_driver",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "sel-sched.c",
      "name": "find_best_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-call-cdce.c",
      "name": "gen_one_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-data-ref.c",
      "name": "analyze_siv_subscript_cst_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-data-ref.c",
      "name": "analyze_subscript_affine_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-data-ref.c",
      "name": "compute_overlap_steps_for_affine_univar",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-eh.c",
      "name": "do_return_redirection",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-scalar-evolution.c",
      "name": "analyze_scalar_evolution_in_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "difference_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "iv_ca_extend",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "strip_offset_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-ssa-loop-niter.c",
      "name": "determine_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-tailcall.c",
      "name": "update_accumulator_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-vect-loop.c",
      "name": "vect_is_simple_iv_evolution",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-vect-patterns.c",
      "name": "widened_name_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-vect-stmts.c",
      "name": "vect_get_loop_based_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-vect-stmts.c",
      "name": "vect_get_vec_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-vect-stmts.c",
      "name": "vect_stmt_relevant_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-vrp.c",
      "name": "find_case_label_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "tree-vrp.c",
      "name": "find_case_label_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "module": "varasm.c",
      "name": "output_constructor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "_fatal_insn_not_found",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "bitmap_print",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "build_call_valist",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "build_external_ref",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "c_split_parallel_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "categorize_ctor_elements",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "cfg_hook_duplicate_loop_to_header_edge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "convert_affine_scev",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "copy_bbs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "count_uses_and_derefs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "cplus_demangle_init_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "cpp_interpret_charconst",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "cselib_dummy_expand_value_rtx_cb",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "cselib_expand_value_rtx_cb",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decNumberAdd",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decNumberCompare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decNumberDivide",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decNumberMultiply",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decNumberRescale",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decNumberSubtract",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "df_compute_accessed_bytes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "df_simple_dataflow",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "duplicate_eh_regions",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "dw2_asm_output_delta",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "dw2_asm_output_encoded_addr_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "dw2_asm_output_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "expand_twoval_binop_libfunc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "extract_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "finish_builtin_struct",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "fit_double_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "fixed_arithmetic",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "gcc_loopnest_to_lambda_loopnest",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "gen_rtx_fmt_iuuB00is_stat",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "gen_rtx_fmt_iuuBieie_stat",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "get_ebb_head_tail",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "get_inner_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "get_mode_bounds",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "gimple_cond_get_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "graphds_dfs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "haifa_init_h_i_d",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "hash_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "htab_create",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "htab_create_alloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "ipa_utils_reduced_inorder",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lambda_loopnest_to_gcc_loopnest",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lto_create_simple_input_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lto_data_in_create",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lto_get_section_data",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lto_output_decl_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lto_streamer_cache_insert",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "neg_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "parser_build_binary_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "parser_build_unary_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "prepare_call_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "real_arithmetic2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "shorten_compare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "simple_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "splay_tree_new_with_allocator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "split_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "start_struct",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "supportable_narrowing_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "thread_across_edge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "tree_to_aff_combination_expand",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "tree_unary_nonzero_warnv_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "tree_unroll_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "true_dependence",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_create_data_ref_ptr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_is_simple_reduction",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_loop_versioning",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vn_reference_lookup",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "walk_non_aliased_vuses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "walk_stmt_load_store_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "walk_tree_without_duplicates_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "combine.c",
      "name": "can_combine_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "cpp_lex.c",
      "name": "bufring_append",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "cse.c",
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "decNumber.c",
      "name": "decTrim",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "dse.c",
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "expmed.c",
      "name": "choose_multiplier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "expmed.c",
      "name": "expand_mult_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "expr.c",
      "name": "expand_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "fold-const.c",
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "fold-const.c",
      "name": "split_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "ifcvt.c",
      "name": "cond_move_convert_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "ira-color.c",
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "ira-costs.c",
      "name": "copy_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "loop-iv.c",
      "name": "shorten_into_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "mini-gmp.c",
      "name": "mpn_set_str_other",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "omega.c",
      "name": "query_coupled_variable",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-call-cdce.c",
      "name": "gen_one_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-data-ref.c",
      "name": "analyze_siv_subscript_cst_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-data-ref.c",
      "name": "analyze_subscript_affine_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-data-ref.c",
      "name": "build_classic_dist_vector_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-data-ref.c",
      "name": "compute_overlap_steps_for_affine_univar",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-data-ref.c",
      "name": "init_omega_for_ddr_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-if-conv.c",
      "name": "add_to_dst_predicate_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-loop-linear.c",
      "name": "gather_interchange_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "difference_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "get_computation_aff",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "get_computation_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "iv_ca_extend",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-ssa-loop-niter.c",
      "name": "determine_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-tailcall.c",
      "name": "adjust_return_value_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-vect-stmts.c",
      "name": "vect_get_vec_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-vrp.c",
      "name": "find_case_label_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "tree-vrp.c",
      "name": "vrp_evaluate_conditional_warnv_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "module": "var-tracking.c",
      "name": "track_loc_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "_fatal_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "add_builtin_function_ext_scope",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "add_double_with_sign",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "cfg_hook_duplicate_loop_to_header_edge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "count_uses_and_derefs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "create_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "df_simple_dataflow",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "dump_bb_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "gen_rtx_fmt_iuuB00is_stat",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "get_mode_bounds",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "grokfield",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "htab_create_alloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "lrotate_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "parser_build_binary_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "peep2_find_free_register",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "rrotate_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "rshift_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "splay_tree_new_with_allocator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "struct.d_info",
      "type": "struct"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "subreg_get_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "supportable_narrowing_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "thread_across_edge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "tree_transform_and_unroll_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "union_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_create_data_ref_ptr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_is_simple_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_permute_load_chain",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_permute_store_chain",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vn_reference_lookup_pieces",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "walk_aliased_vdefs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "walk_non_aliased_vuses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "walk_stmt_load_store_addr_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "combine.c",
      "name": "merge_outer_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "decNumber.c",
      "name": "decCompareOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "decNumber.c",
      "name": "decDivideOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "decNumber.c",
      "name": "decQuantizeOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "expmed.c",
      "name": "choose_multiplier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "fold-const.c",
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "fold-const.c",
      "name": "maybe_canonicalize_comparison_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "ira-color.c",
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "mini-gmp.c",
      "name": "mpn_div_qr_preinv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-data-ref.c",
      "name": "build_classic_dist_vector_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-inline.c",
      "name": "setup_one_parameter",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-loop-linear.c",
      "name": "gather_interchange_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "difference_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-ssa-loop-ivopts.c",
      "name": "get_computation_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-ssa-loop-niter.c",
      "name": "number_of_iterations_lt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-vrp.c",
      "name": "extract_code_and_val_from_cond_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "module": "tree-vrp.c",
      "name": "vrp_evaluate_conditional_warnv_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "add_builtin_function_ext_scope",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "add_double_with_sign",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "canon_true_dependence",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "cfg_hook_duplicate_loop_to_header_edge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "copy_bbs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "double_int_sdivmod",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "gen_rtx_fmt_iuuB00is_stat",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "gimple_duplicate_loop_to_header_edge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "htab_create_alloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "ira_reassign_pseudos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "locate_and_pad_parm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "lrotate_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "pre_edge_lcm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "pre_edge_rev_lcm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "rrotate_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "rshift_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "splay_tree_new_with_allocator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "supportable_narrowing_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "tree_transform_and_unroll_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "vect_is_simple_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "vect_setup_realignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "calls.c",
      "name": "emit_library_call_value_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "fold-const.c",
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "ira-color.c",
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "lambda-code.c",
      "name": "lle_to_gcc_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "tree-call-cdce.c",
      "name": "gen_one_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "tree-loop-linear.c",
      "name": "gather_interchange_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "tree-ssa-pre.c",
      "name": "translate_vuse_through_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "module": "tree-vrp.c",
      "name": "extract_code_and_val_from_cond_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "c_finish_omp_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "div_and_round_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "lambda_loopnest_to_gcc_loopnest",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "locate_and_pad_parm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "mpz_import",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "operation_could_trap_helper_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "pre_edge_lcm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "pre_edge_rev_lcm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "vect_create_data_ref_ptr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "module": "fold-const.c",
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "module": "ira-color.c",
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "module": "reload.c",
      "name": "push_secondary_reload",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "module": "tree-vect-stmts.c",
      "name": "vect_create_vectorized_demotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "div_and_round_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "gen_rtx_fmt_iuuB00is_stat",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "struct.d_info",
      "type": "struct"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "vn_nary_op_lookup_pieces",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "module": "fold-const.c",
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "module": "reload.c",
      "name": "push_secondary_reload",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 9,
      "module": "tree-vect-slp.c",
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 9,
      "name": "gen_rtx_fmt_iuuBieie_stat",
      "type": "funarg"
    },
    "type": "value"
  }
]