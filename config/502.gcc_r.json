[
  {
    "pattern": {
      "index": 1,
      "name": "chrec_is_positive",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_chrecs_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "analyze_scalar_evolution_in_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "parse_assertion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "run_directive",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "parse_include",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "parse_include",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "parse_include",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "cpp_error",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_last_nondebug_bb",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gnu_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gnu_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "demangle_template",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "consume_count",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "string_appends",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "string_prepends",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "arm_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "arm_special",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "iterate_demangle_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "iterate_demangle_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "do_arg",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_fully_fold",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "catenate_strings",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "add_tlist",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_cpp_push_token_context",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "paste_tokens",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "collect_data_for_malloc_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_worklist_dataflow",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "subst_stack_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_with_int_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_type_minmax",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "builtin_define_type_minmax",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "builtin_define_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "builtin_define_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_decimal_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "builtin_define_decimal_float_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_fixed_point_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "builtin_define_fixed_point_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_with_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_std",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_constants",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "builtin_define_with_hex_fp_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "builtin_define_with_hex_fp_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "try_bitmap_cache",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "try_transformation_cache",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "schedule_on_fences",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "compute_av_set_on_boundaries",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "remove_insns_that_need_bookkeeping",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "find_best_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "find_best_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "choose_best_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "code_motion_path_driver",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "undo_transformations",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "extract_new_fences_from",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "propagate_rtx_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_prop_source_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "compute_use_by_pseudos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "choose_reload_regs_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "write_symbol_vec",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "output_location",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gather_memory_references_ref",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "def_cfa_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "build_cfa_loc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "lookup_cfa_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lookup_cfa_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "compute_barrier_args_size_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "expansion_failed",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "add_loc_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "add_AT_lbl_id",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "add_ranges_by_labels",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "collect_checksum_attributes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "generate_skeleton_bottom_up",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "emit_group_load",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "can_store_by_pieces",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "store_by_pieces",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "store_by_pieces_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "emit_push_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "emit_push_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "emit_push_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_inner_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_inner_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "get_inner_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "get_inner_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "get_inner_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "get_inner_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expand_expr_real_2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "expand_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "expand_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ao_ref_init_from_vn_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "copy_reference_ops_from_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vn_reference_fold_indirect",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vn_reference_fold_indirect",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vn_reference_lookup",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vn_nary_op_lookup",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vn_nary_op_lookup_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "final_start_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "notice_source_line",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "output_asm_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "output_operand_lossage",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "output_asm_operand_names",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "asm_fprintf",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_mem_expr_from_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_begin",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "query_coupled_variable",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "output_constructor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decode_addr_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "narrowing_initializer_constant_valid_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_eh_region_and_lp_from_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_eh_region_and_lp_from_rtx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "do_per_function_toporder",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "do_per_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_paritydi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_paritydi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gen_paritydi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_paritysi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_paritysi2_cmp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_sse4_2_pcmpestr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_sse4_2_pcmpestr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gen_sse4_2_pcmpistr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gen_sse4_2_pcmpistr_cconly",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "add_insn_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "emit_insn_before_noloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "emit_insn_after_noloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "lshift_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "lshift_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "div_and_round_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "div_and_round_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "name": "div_and_round_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 9,
      "name": "div_and_round_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "make_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "merge_ranges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "merge_ranges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "merge_ranges",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "split_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "split_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "split_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ptr_difference_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fold_overflow_warning",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "name": "decode_field_reference",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "maybe_canonicalize_comparison_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "create_mem_ref_raw",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "add_to_parts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "noce_get_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cond_move_process_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "noce_emit_store_flag",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "noce_get_alt_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "noce_get_alt_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "check_cond_move_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "check_cond_move_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "cond_move_convert_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "cond_move_convert_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cond_exec_process_if_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "md5_process_bytes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "print_node",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_addr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "process_ssa_edge_worklist",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "for_each_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "simple_mem_ref_in_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decode_format_attr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "maybe_read_dollar_number",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "maybe_read_dollar_number",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "rtd_divmod",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "rtd_divmod",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "encode_ieee_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decode_ieee_double",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "real_trunc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decimal_integer_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "register_edge_assert_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "extract_code_and_val_from_cond_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "extract_code_and_val_from_cond_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "extract_range_from_assignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "update_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "set_value_range_to_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "range_is_null",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vrp_expr_computes_nonnegative",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vrp_meet",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vrp_meet",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vrp_evaluate_conditional_warnv_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "vrp_evaluate_conditional_warnv_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "find_case_label_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "find_case_label_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "find_case_label_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gcov_read_summary",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "split_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "split_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_succ_iter_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "make_region_from_loop_preheader",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ready_sort",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "max_issue",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "max_issue",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "early_queue_to_ready",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sched_create_recovery_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sched_scan",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "assign_parms_augmented_arg_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "assign_parm_find_data_types",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "assign_parm_find_data_types",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "locate_and_pad_parm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "locate_and_pad_parm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "try_combine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "can_combine_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "can_combine_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "find_single_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "recog_for_combine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "recog_for_combine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "if_then_else_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "if_then_else_cond",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "simplify_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "simplify_comparison",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "simplify_shift_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "merge_outer_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "merge_outer_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "merge_outer_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "tree_ssa_iv_optimize_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "extract_cond_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "strip_offset_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "get_computation_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "get_computation_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "constant_multiple_of",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "difference_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "difference_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "difference_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "get_computation_aff",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "iv_ca_extend",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "iv_ca_extend",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "gather_interchange_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "gather_interchange_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "gather_interchange_stats",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "thunk_adjust",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "deps_add_target",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "prepare_call_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "save_fixed_argument_area",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "save_fixed_argument_area",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "store_one_arg",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "check_sibcall_argument_overlap",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "emit_library_call_value_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "build_string_literal",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "fold_builtin_strcpy",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "fold_builtin_strncpy",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "fold_builtin_call_array",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "fold_builtin_fputs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "fold_builtin_memory_chk",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "fold_builtin_stxcpy_chk",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "fold_builtin_strncpy_chk",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "fold_builtin_snprintf_chk",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gimple_fold_builtin_snprintf_chk",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "target_char_cast",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decDigitsToDPD",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "create_basic_block_structure",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "parse_output_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "parse_input_constraint",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "number_of_iterations_exit",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_affine_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "number_of_iterations_ne",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "number_of_iterations_lt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "number_of_iterations_lt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "number_of_iterations_lt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "split_to_var_and_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "split_to_var_and_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "determine_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "determine_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "determine_value_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "walk_gimple_omp_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "walk_gimple_omp_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "extend_rgns",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "deps_join",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "get_secondary_mem",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "push_secondary_reload",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "name": "push_secondary_reload",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "decompose",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "immune_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "init_dom_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "calc_dfs_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "calc_idoms",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "free_dom_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "insert_restore",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ao_ref_from_mem",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_is_simple_reduction",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "report_vect_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_initial_def_for_reduction",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "reduction_code_for_scalar_code",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vectorizable_induction",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_induction",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_is_simple_iv_evolution",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_is_simple_iv_evolution",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fix_bb_placements",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "is_array_access_through_pointer_and_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "is_array_access_through_pointer_and_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "is_array_access_through_pointer_and_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "print_bitmap_set",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "translate_vuse_through_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mf_xform_derefs_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "canon_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "maybe_canonicalize_argtypes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "maybe_canonicalize_argtypes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "build_call_valist",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gimple_cond_get_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gimple_cond_get_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "gimple_cond_get_ops_from_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "walk_gimple_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "walk_stmt_load_store_addr_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lookup_tag",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "finish_decl",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "finish_decl",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "parser_xref_tag",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "expand_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "choose_mult_variant",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "choose_mult_variant",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "expand_mult_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "expand_divmod",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "choose_multiplier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "choose_multiplier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "choose_multiplier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "synth_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "emit_stack_save",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "emit_stack_save",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "make_constraint_from_heapvar",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_constraint_for",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_constraint_for_ptr_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "handle_rhs_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "VEC_ce_s_heap_safe_push",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ao_ref_init_from_ptr_and_size",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_insert_seq_before",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "gsi_insert_seq_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gsi_move_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gsi_move_before",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "gimple_find_edge_insert_loc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mark_target_live_regs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "find_dead_or_set_registers",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "c_common_read_pch",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "extract_omp_for_data",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "extract_omp_for_data",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "expand_omp_for_generic",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "lower_omp_critical",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "lower_rec_input_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lower_rec_input_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "lower_reduction_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "task_copyfn_remap_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lower_lastprivate_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_lr_alloc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_lr_local_compute",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cse_main",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "find_comparison_args",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "find_reg_offset_for_const",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vect_analyze_slp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_transform_slp_perm_load",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_transform_slp_perm_load",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_build_slp_tree",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 9,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 10,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 12,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 13,
      "name": "vect_get_and_check_slp_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "is_ctor_or_dtor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "is_ctor_or_dtor",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "d_append_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "negate_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "optimize_ops_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "check_real_for_fixed_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "create_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "create_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "create_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "create_iv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "gimple_duplicate_loop_to_header_edge",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "tree_transform_and_unroll_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "tree_transform_and_unroll_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "gen_one_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "gen_one_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "gen_one_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_fixup_graph",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dump_fixup_graph",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "find_use_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "find_associative_operation_root",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "split_directories",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "graphds_dfs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "subreg_get_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "canonicalize_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "copy_tree_r",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "delete_unreachable_blocks_update_callgraph",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "setup_one_parameter",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "setup_one_parameter",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "copy_body",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "remap_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "is_candidate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "is_candidate",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "gen_size",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "gen_cast_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "rdg_build_components",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "rdg_build_partitions",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "iv_neg",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "iv_mult",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "iv_shift",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "iv_analyze",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "latch_dominating_def",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "iv_get_reaching_def",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "shorten_into_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "shorten_into_mode",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "lle_to_gcc_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_lattice_value",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "execute_cse_reciprocals_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "maybe_record_sincos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "maybe_record_sincos",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "dump_gimple_fmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "convert_affine_scev",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "convert_affine_scev",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "widened_name_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "widened_name_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "split_block",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_verify_datarefs_alignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_create_addr_base_for_vector_ref",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_create_data_ref_ptr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_create_data_ref_ptr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_create_data_ref_ptr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "vect_create_data_ref_ptr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_permute_load_chain",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "print_pattern",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "print_insn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "init_iconv_desc",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "_cpp_valid_ucn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "_cpp_valid_ucn",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "calculate_spill_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "create_tailcall_accumulator",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "independent_of_stmt_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "adjust_return_value_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "adjust_return_value_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "update_accumulator_with_ops",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "operation_could_trap_helper_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "honor_protect_cleanup_actions",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "honor_protect_cleanup_actions",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "emit_resx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "do_return_redirection",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "replace_goto_queue_cond_clause",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "warn_uninit",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "build_message_string",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "diagnostic_report_diagnostic",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fnotice",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "internal_error",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decode_utf8_char",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dbxout_symbol_location",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dbxout_common_check",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_insn_refs_verify",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_free_collection_rec",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_refs_add_to_chains",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "df_bb_refs_collect",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "va_list_ptr_read",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "va_list_ptr_write",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "check_va_list_escapes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "va_list_counter_struct_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "add_to_dst_predicate_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decimal_from_decnumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decimal_from_decnumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decimal_to_decnumber",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "aff_combination_add",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "VEC_expr_hash_elt_t_heap_safe_push",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "diagnostic_for_asm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "print_hard_reg_set",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "dump_bb_info",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "build_function_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "build_function_call_vec",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "error_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "pedwarn_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "process_init_element",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "pop_init_level",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "warning_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpn_get_str_other",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "mpn_set_str_other",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_gcd_ui",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_gcd",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_gcdext",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_gcdext",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpz_gcdext",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_setbit",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_invert",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "mpz_pow_ui",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "mpz_powm",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpn_div_qr_invert",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "mpn_div_qr_preinv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "mpz_get_str",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "build_ref_for_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "scan_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "scan_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "scan_function",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "disqualify_base_of_expr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_dereferences_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sel_prepare_string_for_dot_label",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "lex_number",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "warn_about_normalization",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lex_identifier",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "bufring_append",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "bufring_append",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expand_vector_parallel",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "expand_vector_parallel",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "lto_output_decl_index",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "add_comma_separated_to_vector",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "xre_search_2",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "byte_group_match_null_string_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "byte_common_op_match_null_string_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "byte_compile_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decNumberFromString",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberFromString",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decFinalize",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "decCompareOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "decDivideOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decExpOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decLnOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "decQuantizeOp",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "decTrim",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decNumberToIntegralExact",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "write_pch_globals",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "write_pch_globals",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "cpp_interpret_integer",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "num_binary_op",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "num_lshift",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "num_rshift",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sha1_finish_ctx",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sha1_process_bytes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expand_stack_vars",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "link_use_stmts_after",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "op_iter_init_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "cgraph_default_inline_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "decode_asm_operands",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "asm_operand_ok",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "record_reg_classes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "record_reg_classes",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "copy_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "recognize_single_bit_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "recognize_single_bit_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "recognize_bits_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "recognize_bits_test",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "force_expand_binop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "lower_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "fel_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_inv_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "get_inv_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_cover_class_and_nregs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "extract_component",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "update_complex_assignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "expand_complex_libcall",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "insn_sets_btr_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "btr_def_live_range",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "union_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_compute_frame_layout",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "output_set_got",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_decompose_address",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_expand_vector_move_misalign",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "ix86_expand_carry_flag_compare",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_split_to_parts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_expand_sse_fabs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "ix86_handle_option",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_expand_vector_init_concat",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "ix86_expand_vector_init_interleave",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "extract_vec_perm_cst",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_vec_perm_builtin_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_special_args_builtin",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_args_builtin",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_sse_comi",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_sse_pcmpestr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "ix86_expand_sse_pcmpistr",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "split_constant_offset",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "get_references_in_stmt",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "compute_data_dependences_for_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "compute_data_dependences_for_loop",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "analyze_siv_subscript_cst_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "analyze_siv_subscript_cst_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "analyze_siv_subscript_cst_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "analyze_subscript_affine_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "analyze_subscript_affine_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "analyze_subscript_affine_affine",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "compute_overlap_steps_for_affine_univar",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "compute_overlap_steps_for_affine_univar",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "build_classic_dist_vector_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "build_classic_dist_vector_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "init_omega_for_ddr_1",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "sched_get_condition_with_rev",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "sd_next_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "sd_find_dep_between_no_cache",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "sd_delete_dep",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "create_tmp_var_raw",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "force_gimple_operand",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "reversed_comparison_code_parts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "is_too_expensive",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "compute_hash_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "dump_hash_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "dump_hash_table",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "compute_local_properties",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "lto_record_common_node",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "lto_record_common_node",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "insn_stack_adjust_offset_pre_post",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "insn_stack_adjust_offset_pre_post",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "VEC_micro_operation_heap_safe_push",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "use_type",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "track_loc_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_stmt_relevant_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_stmt_relevant_p",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vect_mark_relevant",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_model_simple_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_model_simple_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_model_store_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_model_load_cost",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vect_get_vec_def_for_operand",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_is_simple_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_is_simple_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "vect_is_simple_use",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vectorizable_condition",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_type_promotion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_type_demotion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_conversion",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_assignment",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_load",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_call",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "vectorizable_store",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 6,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 8,
      "name": "supportable_widening_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "supportable_narrowing_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "supportable_narrowing_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 5,
      "name": "supportable_narrowing_operation",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vect_create_vectorized_promotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "vect_create_vectorized_promotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 12,
      "name": "vect_create_vectorized_promotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vect_get_loop_based_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_get_loop_based_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "vect_create_vectorized_demotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 7,
      "name": "vect_create_vectorized_demotion_stmts",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "vect_get_vec_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 4,
      "name": "vect_get_vec_defs",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "c_parser_error",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_parser_skip_until_found",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_parser_require_keyword",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "c_parser_conditional_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "c_parser_binary_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "c_parser_expression_conv",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "c_parser_cast_expression",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "c_parser_expr_list",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 0,
      "name": "c_parser_braced_init",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 1,
      "name": "c_parser_initval",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 2,
      "name": "c_parser_omp_all_clauses",
      "type": "funarg"
    },
    "type": "value"
  },
  {
    "pattern": {
      "index": 3,
      "name": "c_parser_omp_for_loop",
      "type": "funarg"
    },
    "type": "value"
  }
]